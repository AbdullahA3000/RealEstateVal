# -*- coding: utf-8 -*-
"""Finance_MVP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NWmbo1ePxkezqk7strKIF-seWhsA6bEb

# Finance MVP May 2021


Welcome to our house pricing predictor!
"""



"""Installing Packages"""



!pip3 install pandas
!pip3 install scikit-learn
!pip3 install matplotlib==3.1.3
!pip3 install seaborn

# Install the PyDrive wrapper & import libraries.
# This only needs to be done once per notebook.
!pip install -U -q PyDrive
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from google.colab import auth
from oauth2client.client import GoogleCredentials

# Authenticate and create the PyDrive client.
# This only needs to be done once per notebook.
auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

"""Mount Google Drive to Load Data"""

from google.colab import drive
drive.mount('/content/drive')

"""# Toronto Apartment Rentals Dataset

Loading Data with Pandas
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

df = pd.read_csv('/content/drive/MyDrive/Finance MVP May 2021/Data/Toronto_apartment_rentals_2018.csv')
df.head()

"""Data Visualization - Toronto Apartment Rentals"""

# #Plot target variable - price
# sns.histplot(data = df, x = "Price")
# plt.show()

# #plot features and target var
# sns.scatterplot(x = "Bathroom", y = "Price", data = df)
# plt.show()


#plot histogram of number of bathrooms
sns.histplot(x = "Bathroom", data = df)
plt.show()

#plot histogram of number of bedrooms
sns.histplot(x = "Bedroom", data = df)
plt.show()

#plot histogram of number of dens
sns.histplot(x = "Den", data = df)
plt.show()

"""Regression Models"""

#Train models here

"""Plot Results"""

#Results of models here

"""# House Pricing Dataset"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

df = pd.read_csv('/content/drive/MyDrive/Finance MVP May 2021/Data/kc_house_data.csv')
df.head()

"""Visualizing House Price Dataset"""

#Price vs Sqft of living
sns.scatterplot(x = "sqft_living", y = "price", data = df)
plt.show()

#Price vs Sqft of basement
sns.scatterplot(x = "sqft_basement", y = "price", data = df)
plt.show()

#Price vs Year_built
sns.scatterplot(x = "yr_built", y = "price", data = df)
plt.show()

"""Regression Models"""

from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(df['sqft_living'], df['price'], test_size=0.4, random_state= 13)

print(len(X_train))
print(len(X_test))


plt.scatter(x = X_train, y = y_train, color = "#ff8a5b", label = "Training Data")
plt.scatter(x = X_test, y = y_test, color = "#26C485", label = "Testing Data")
plt.title("Training and Testing Data for Linear Regression")
plt.xlabel("Sq-Ft Living")
plt.ylabel("House Price")
plt.legend()
plt.show()

LR = LinearRegression()
LR.fit(X_train.values.reshape(-1,1), y_train.values)

"""Testing the Model"""

prediction = LR.predict(X_test.values.reshape(-1,1))

plt.plot(X_test, prediction, label = 'Linear Regression', color = 'b')
plt.scatter(X_test, y_test, label = 'Actual Test Data', color = 'g', alpha=0.7)
plt.xlabel("Sq-Ft Living")
plt.ylabel("House Price")
plt.title("Linear Fit of House Price vs Sq-Ft Living")
plt.legend()
plt.show()

#Predict price of house given specific square footage
LR.predict(np.array([[10000]]))[0]

LR.predict(np.array([[6000]]))[0]

"""Model Accuracy"""

LR.score(X_test.values.reshape(-1,1), y_test.values)

multiple_features = df.iloc[:, 3:]

print(multiple_features)